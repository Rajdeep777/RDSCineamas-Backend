{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "description": "APIs for Movie Application",
    "title": "Movie API"
  },
  "servers": [
    {
      "url": "http://51.21.150.22:8000"
    }
  ],
  "components": {
    "securitySchemes": {
      "JWT": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      }
    }
  },
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "SignUp",
        "description": "User SignUp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User Created"
          },
          "500": {
            "description": "Something went wrong with database"
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Login",
        "description": "User login to get token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Incorrect Credentials"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "User will get all registered users info",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/movies/add": {
      "post": {
        "tags": ["Movies"],
        "summary": "Add movies",
        "description": "User will add movies",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the movie. Example: 'Inception'"
                  },
                  "year": {
                    "type": "number",
                    "description": "The release year of the movie. Example: 2010"
                  },
                  "imdb": {
                    "type": "number",
                    "description": "The IMDb rating of the movie on a scale of 1 to 10. Example: 8.8"
                  },
                  "desc": {
                    "type": "string",
                    "description": "A brief description of the movie. Example: 'A skilled thief is given a chance at redemption if he can successfully perform an inception.'"
                  },
                  "categories": {
                    "type": "string",
                    "description": "The categoryId of the movie which you can find on this API endpoint --- GET '/api/movies/categories'. Example: '67598d13110228df6e55a5a1' for 'Action' category"
                  },
                  "fullhdSize": {
                    "type": "number",
                    "description": "The size of the Full HD version in GB. Example: 4.5"
                  },
                  "ultrahdSize": {
                    "type": "number",
                    "description": "The size of the Ultra HD version in GB. Example: 8.2"
                  },
                  "fullhdLink": {
                    "type": "string",
                    "description": "A download link for the Full HD version of the movie."
                  },
                  "ultrahdLink": {
                    "type": "string",
                    "description": "A download link for the Ultra HD version of the movie."
                  },
                  "imageUrl": {
                    "type": "string",
                    "format": "binary",
                    "description": "The movie's poster or image file. Upload a file in PNG, JPG, or JPEG format."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Movie has been added"
          },
          "500": {
            "description": "Something went wrong with database"
          }
        }
      }
    },
    "/api/movies": {
      "get": {
        "tags": ["Movies"],
        "summary": "Get Movies",
        "description": "User will get all movies",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/movies/categories": {
      "get": {
        "tags": ["Movies"],
        "summary": "Get Categories of Movies",
        "description": "User will get all categories of movies",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/movies/{movieId}": {
      "get": {
        "tags": ["Movies"],
        "summary": "Get one movie",
        "description": "User will get details of a single movie by providing the movieId",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "path",
            "name": "movieId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the movie to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Movie not found"
          },
          "400": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/api/movies/ratings": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get Ratings",
        "description": "User will get all ratings",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/movies/averageRating": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get average ratings",
        "description": "User will get average ratings of movies",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/movies/countofRating": {
      "get": {
        "tags": ["Reviews"],
        "summary": "Get count of ratings",
        "description": "User will get count of ratings",
        "security": [{ "JWT": {} }],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/movies/rate": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Rate movies",
        "description": "Users will rate movies",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "movieID": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Something went wrong with database"
          }
        }
      }
    },
    "/api/likes/add": {
      "post": {
        "tags": ["Likes"],
        "summary": "Like Movies & Categories",
        "description": "User will add likes on moives and categories by providing the 'type' as 'Movie' or 'Category' and 'id' as 'movieId' or 'categoryId'",
        "security": [{ "JWT": {} }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Incorrect Credentials"
          }
        }
      }
    },
    "/api/likes": {
      "get": {
        "tags": ["Likes"],
        "summary": "Get likes",
        "description": "User will retrieve likes of moives and categories by providing the 'type' as 'Movie' or 'Category' and 'id' as 'movieId' or 'categoryId' in query params",
        "security": [{ "JWT": {} }],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            },
            "description": "The type as 'Movie' or 'Category' to retrieve likes"
          },
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The id of the 'Movie' and 'Category to retrieve likes"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Incorrect Credentials"
          }
        }
      }
    }
  }
}
